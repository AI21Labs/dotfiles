# 077 would be more secure, but 022 is generally quite realistic
umask 022

# Colorful manpages
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
# Set to avoid `env` output from changing console colour
export LESS_TERMEND=$'\E[0m'

# Qt development
export QTEST_COLORED=1

# KDAB development
export KDABSVN='svn+ssh://mike@svn.kdab.com/home/SVN-klaralv'
if [[ $(whoami) == *kdab* ]]
then
	export EMAIL="mike.mcquaid@kdab.com"
else
	export EMAIL="mike@mikemcquaid.com"
fi
export GIT_AUTHOR_EMAIL="$EMAIL"
export GIT_COMMITTER_EMAIL="$EMAIL"

# Setup paths
function addtopath {
	if [[ -d $1 ]]
	then
		export PATH="$1:$PATH"
	fi
}

addtopath /usr/local/bin
addtopath /usr/local/sbin
addtopath $HOME/Documents/Scripts
addtopath $HOME/Scripts
addtopath $HOME/.gem/ruby/1.8/bin
addtopath $HOME/Applications/SenchaSDKTools-1.2.2
addtopath $HOME/Applications/SenchaSDKTools-1.2.2/command

# Count CPUs on OS X and Linux
if [[ $(uname -s) == "Darwin" ]]
then
	export CPUCOUNT=$(sysctl -n hw.ncpu)
elif [[ $(uname -s) = "Linux" ]]
then
	export CPUCOUNT=$(getconf _NPROCESSORS_ONLN)
fi

if [[ "$CPUCOUNT" -gt 1 ]]
then
	export MAKEFLAGS="-j$CPUCOUNT"
fi

# Aliases
alias su="/bin/su -"
alias scp="scp -r"
alias mkdir="mkdir -vp"
alias df="df -H"
alias rm="rm -iv"
alias mv="mv -iv"
alias cp="cp -irv"
alias du="du -sh"
alias less="less -r"
alias wget="wget -c"
alias watch="watch -n1"
alias grep="grep --color=auto"
alias ls="ls -F --color=auto"
alias make="nice make"
alias brew="nice brew"
alias bpi="brew pull --install"
alias mike="ssh mike@localhost"

function aliasifexists {
	if which $2 1>/dev/null
	then
		alias $1=$2
	fi
}

aliasifexists ack ack-grep
aliasifexists diff colordiff
aliasifexists open gnome-open

# Upload files to various locations
function scptohttp {
	USER="$1"
	UPLOADHOST="$2"
	WWWDIR="$3"
	if [[ -z "$5" ]]
	then
		FILEPATH="$4"
	else
		HTTPPATH="$4"
		FILEPATH="$5"
	fi

	FILENAME=$(basename "$FILEPATH")
	HTTPFILE=${FILENAME//" "/"%20"}

	if [[ -z "$HTTPPATH" ]]
	then
		HTTP="http://$UPLOADHOST/~$USER/$HTTPFILE"
	else
		HTTP="$HTTPPATH/$HTTPFILE"
	fi

	SCP="$USER@$UPLOADHOST:$WWWDIR/"
	scp "$FILEPATH" "$SCP"
	if (( $? ))
	then
		echo "$FILEPATH failed to upload to $SCP"
	else
		echo "$FILEPATH uploaded to $HTTP"

		if [ $(uname -s) = "Darwin" ]
		then
			echo $HTTP | pbcopy
			echo "URL copied to clipboard."
		fi
	fi
}

alias upkdab="scptohttp mike swanson.kdab.com public_html"
alias upjoanna="scptohttp mike joanna.kdab.com public_html"
alias upmike="scptohttp mike mikemcquaid.com Sites"
alias upbrew="scptohttp mikemcquaid,machomebrew frs.sourceforge.net /home/frs/project/m/ma/machomebrew/Bottles https://downloads.sourceforge.net/project/machomebrew/Bottles"

# Connect to existing ssh agents when available
function ssh-agent {
	shopt -s nullglob
	SSH_AGENTS_GLOB=/tmp/ssh-*/agent.*
	for SSH_AUTH_SOCK in $SSH_AGENTS_GLOB
	do
		if [[ $(ssh-add -l) == *:* ]]
		then
			echo "Agent ${SSH_AUTH_SOCK}"
			export SSH_AUTH_SOCK
			break
		fi
	done

	if [[ "$SSH_AUTH_SOCK" == "$SSH_AGENTS_GLOB" || -z "$SSH_AUTH_SOCK" ]]
	then
		SSH_AGENT=$(which ssh-agent)
		eval $($SSH_AGENT)
	fi
	ssh-add
}

git_branch() {
	BRANCH_REFS=$(git symbolic-ref HEAD 2>/dev/null) || return
	echo "${BRANCH_REFS#refs/heads/}"
}

svn_branch() {
	[ -d .svn ] || return
	SVN_INFO=$(svn info 2>/dev/null) || return
	SVN_BRANCH=$(echo $SVN_INFO | grep URL: | grep -oe '\(trunk\|branches/[^/]\+\|tags/[^/]\+\)')
	[ -n "$SVN_BRANCH" ] && echo "$SVN_BRANCH"
}

# Makes changing branches in Subversion more like Git
svn_change() {
	NEW_BRANCH="$1"
	[ -n "$NEW_BRANCH" ] || (echo "No branch specified" && return)
	[ -d .svn ] || (echo "No .svn directory found" && return)

	OLDPWD=$PWD
	while [ -d ../.svn ]
	do
		cd ..
	done

	SVN_URL=$(svn info 2>/dev/null | grep URL: | sed -e 's/URL: //')
	CURRENT_BRANCH=$(svn_branch)
	SVN_ROOT=${SVN_URL%$CURRENT_BRANCH}

	if [ $NEW_BRANCH != "trunk" ]
	then
		echo "Searching branches for $NEW_BRANCH"
		for BRANCH in $(svn ls ${SVN_ROOT}/branches)
		do
			[ "$NEW_BRANCH/" != $BRANCH ] && continue
			FOUND_BRANCH="branches/$BRANCH"
			break
		done

		if [ -z "$FOUND_BRANCH" ]
		then
			echo "Searching tags for $NEW_BRANCH"
			for TAG in $(svn ls ${SVN_ROOT}/tags)
			do
				[ "$NEW_BRANCH/" != $TAG ] && continue
				FOUND_BRANCH="tags/$TAG"
				break
			done
		fi

		if [ -z "$FOUND_BRANCH" ]
		then
			echo "Could not find a branch or tag named $NEW_BRANCH"
			cd $OLDPWD
			return
		else
			NEW_BRANCH="$FOUND_BRANCH"
		fi
	fi

	echo svn switch "$SVN_ROOT$NEW_BRANCH"
	svn switch "$SVN_ROOT$NEW_BRANCH"
	cd $OLDPWD
}

# Platform-specific stuff
export EDITOR="vim"

if [[ $(uname -s) == "Darwin" ]]
then
	if [[ -n "${DISPLAY}" ]]
	then
		export EDITOR="vicotool"
		export GIT_EDITOR="vicotool -w"
		export SVN_EDITOR=$GIT_EDITOR
	fi
	alias ls="ls -F -G"
# Matches Cygwin or MINGW
elif [[ $(uname -s) == *_NT-* ]]
then
	unalias grep
	function open {
		cmd /C"$*"
	}
fi

# Run dircolors if it exists
if which dircolors 1>/dev/null
then
	eval $(dircolors -b)
fi

# Aliases using variables
alias ed="$EDITOR"
